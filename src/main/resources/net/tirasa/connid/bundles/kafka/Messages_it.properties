#
# Copyright (C) 2016 ConnId (connid-dev@googlegroups.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

kafka.connector.display=Connettore Kafka
bootstrapServers.display=Server di bootstrap
bootstrapServers.help=Un elenco di coppie host/porta utilizzate per stabilire la connessione iniziale al cluster Kafka
clientId.display=Id client
clientId.help=Id client per sottoscrizione
autoOffsetReset.display=Reset auto offset
autoOffsetReset.help=Cosa fare quando non c'\u00e8 alcun offset iniziale in Kafka o se l'offset corrente non esiste pi\u00f9 sul server (ad esempio perch\u00e9 i dati sono stati eliminati); il valore predefinito \u00e8 "earliest" per assicurarsi che il producer abbia inviato tutti i messaggi prima che il consumer inizi.
valueSerializerClassName.display=Classe serializzazione valori
valueSerializerClassName.help=Classe per la serializzazione dei valori che implementa l'interfaccia org.apache.kafka.common.serialization.Serializer. Il valore predefinito \u00e8 'net.tirasa.connid.bundles.kafka.serialization.SyncDeltaSerializer'
valueDeserializerClassName.display=Classe deserializzazione valori
valueDeserializerClassName.help=Classe per la deserializzazione dei valori che implementa l'interfaccia 'org.apache.kafka.common.serialization.Deserializer'. Il valore predefinito \u00e8 'org.apache.kafka.common.serialization.StringDeserializer'
accountTopic.display=Topic su cui pubblicare e di cui essere abbonati per l'object class __ACCOUNT__
accountTopic.help=Un topic \u00e8 simile a una cartella in un file system e gli eventi sono i file contenuti in quella cartella.
groupTopic.display=Topic su cui pubblicare e di cui essere abbonati per l'object class __GROUP__
groupTopic.help=Un topic \u00e8 simile a una cartella in un file system e gli eventi sono i file contenuti in quella cartella.
allTopic.display=Topic su cui pubblicare e di cui essere abbonati per l'object class __ALL__
allTopic.help=Un topic \u00e8 simile a una cartella in un file system e gli eventi sono i file contenuti in quella cartella.
consumerPollMillis.display=Numero massimo di millisecondi da bloccare durante il polling
consumerPollMillis.help=Il polling restituisce un risultato immediato se ci sono record disponibili o se la posizione supera i record di controllo; in caso contrario, attender\u00e0 il timeout trascorso: se il timeout scade, verr\u00e0 restituito un set di record vuoto.
consumerGroupId.display=Id gruppo consumer
consumerGroupId.help=Una stringa univoca che identifica il gruppo di consumer a cui appartiene questo consumer.
